[{"/Users/brentbailey/Documents/personal/browser_extensions/void_tweeting/react-app/src/index.js":"1","/Users/brentbailey/Documents/personal/browser_extensions/void_tweeting/react-app/src/views/Popup/App.js":"2","/Users/brentbailey/Documents/personal/browser_extensions/void_tweeting/react-app/src/content.js":"3","/Users/brentbailey/Documents/personal/browser_extensions/void_tweeting/react-app/src/views/Options/App.js":"4","/Users/brentbailey/Documents/personal/browser_extensions/void_tweeting/react-app/src/background.js":"5","/Users/brentbailey/Documents/personal/browser_extensions/void_tweeting/react-app/src/options.js":"6"},{"size":207,"mtime":1606677424222,"results":"7","hashOfConfig":"8"},{"size":490,"mtime":1606677424282,"results":"9","hashOfConfig":"8"},{"size":814,"mtime":1606689188134,"results":"10","hashOfConfig":"8"},{"size":2079,"mtime":1606683716089,"results":"11","hashOfConfig":"8"},{"size":1,"mtime":1606684120172,"results":"12","hashOfConfig":"8"},{"size":209,"mtime":1606677424224,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"vj7bmh",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/brentbailey/Documents/personal/browser_extensions/void_tweeting/react-app/src/index.js",[],["31","32"],"/Users/brentbailey/Documents/personal/browser_extensions/void_tweeting/react-app/src/views/Popup/App.js",[],["33","34"],"/Users/brentbailey/Documents/personal/browser_extensions/void_tweeting/react-app/src/content.js",["35","36","37"],"/Users/brentbailey/Documents/personal/browser_extensions/void_tweeting/react-app/src/views/Options/App.js",["38"],"import React, { Component } from 'react';\nimport './App.css';\n\nclass Option extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null,\n      name: ''\n    };\n  }\n\n  render() {\n    return (\n      <div class=\"option\">\n      <label>{this.props.name }</label>\n      <input\n        name={this.props.name}\n        type=\"checkbox\"\n        checked={this.props.value}\n        onChange = {this.props.onChange}\n      />\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        crabMode: false,\n        usefulMode: false,\n        silentMode: false,\n        username: ''\n      }\n    }\n  }\n\ncomponentWillMount() {\n  // On app load, check if there's existing data. If not, set it.\n  chrome.storage.sync.get('data', (result) => {\n    //use \"in\" check as a regular if(result.allData) will\n    //return false for empty arrays\n\n    console.log('result data', result.data)\n    if ( 'data' in result ) {\n      this.setState({ data: result.data });\n    } else chrome.storage.sync.set({ data: {} });\n  });\n  this.handleChange = this.handleChange.bind(this);\n}\n\nhandleChange(event) {\n  const target = event.target;\n  const value = target.type === 'checkbox' ? target.checked : target.value;\n  const name = (target.name.charAt(0).toLowerCase() + target.name.slice(1)).replace(' ', '');\n  let data = {...this.state.data};\n  data[name] = value;\n  this.setState({\n    data\n  });\n  console.log('new data: ', data)\n  chrome.storage.sync.set({ data: data });\n}\n\n  render() {\n    return (\n      <div className='App'>\n      <form>\n        <input name=\"Username\" type=\"text\" value={this.state.username} onChange={this.handleChange}/>\n        <Option name=\"Crab Mode\" value={this.state.crabMode} onChange={this.handleChange}/>\n        <Option name=\"Useful Mode\" value={this.state.usefulMode} onChange={this.handleChange}/>\n          <Option name=\"Silent Mode\" value={this.state.silentMode} onChange={this.handleChange}/>\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default App\n","/Users/brentbailey/Documents/personal/browser_extensions/void_tweeting/react-app/src/background.js",[],["39","40"],"/Users/brentbailey/Documents/personal/browser_extensions/void_tweeting/react-app/src/options.js",[],["41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":6,"column":15,"nodeType":"51","messageId":"52","endLine":6,"endColumn":18},{"ruleId":"53","severity":1,"message":"54","line":7,"column":15,"nodeType":"55","messageId":"56","endLine":7,"endColumn":17},{"ruleId":"49","severity":1,"message":"57","line":8,"column":7,"nodeType":"51","messageId":"52","endLine":8,"endColumn":15},{"ruleId":"49","severity":1,"message":"58","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},{"ruleId":"43","replacedBy":"59"},{"ruleId":"45","replacedBy":"60"},{"ruleId":"43","replacedBy":"61"},{"ruleId":"45","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],["63"],["64"],"no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'baseMode' is assigned a value but never used.","'Component' is defined but never used.",["63"],["64"],["63"],["64"],"no-global-assign","no-unsafe-negation"]